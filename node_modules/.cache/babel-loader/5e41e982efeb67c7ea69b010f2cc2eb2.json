{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/spectrumlighting/Documents/Sites/pomodoro-clock/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/spectrumlighting/Documents/Sites/pomodoro-clock/src/components/TimeApp.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Controller from './Controller';\nimport Settings from './Settings';\nimport Time from './Time';\nconst StyledTimeApp = styled.div(_templateObject());\n\nfunction TimeApp() {\n  return React.createElement(StyledTimeApp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"PomodoroHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"pomodoro clock\")), React.createElement(Settings, {\n    breakLength: breakLength,\n    sessionLength: sessionLength,\n    isStart: isStart,\n    onDecreaseBreak: this.onDecreaseBreak,\n    onDecreaseSession: this.onDecreaseSession,\n    onIncreaseBreak: this.onIncreaseBreak,\n    onIncreaseSession: this.onIncreaseSession,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Time, {\n    timeLabel: timeLabel,\n    timeLeftInSecond: timeLeftInSecond,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Controller, {\n    onReset: onReset,\n    onStartStop: onStartStop,\n    isStart: isStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n}\n\nexport default TimeApp;","map":{"version":3,"sources":["/Users/spectrumlighting/Documents/Sites/pomodoro-clock/src/components/TimeApp.js"],"names":["React","useState","styled","Controller","Settings","Time","StyledTimeApp","div","TimeApp","breakLength","sessionLength","isStart","onDecreaseBreak","onDecreaseSession","onIncreaseBreak","onIncreaseSession","timeLabel","timeLeftInSecond","onReset","onStartStop"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAV,mBAAnB;;AAEA,SAASC,OAAT,GAAmB;AACjB,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAKE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAEC,WADf;AAEE,IAAA,aAAa,EAAEC,aAFjB;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,eAAe,EAAE,KAAKC,eAJxB;AAKE,IAAA,iBAAiB,EAAE,KAAKC,iBAL1B;AAME,IAAA,eAAe,EAAE,KAAKC,eANxB;AAOE,IAAA,iBAAiB,EAAE,KAAKC,iBAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAcE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEC,SADb;AAEE,IAAA,gBAAgB,EAAEC,gBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAkBE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEC,OADX;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,OAAO,EAAER,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AA0BD;;AAED,eAAeH,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport Controller from './Controller'\nimport Settings from './Settings'\nimport Time from './Time'\n\nconst StyledTimeApp = styled.div``;\n\nfunction TimeApp() {\n  return (\n    <StyledTimeApp>\n      <div className='PomodoroHeader'>\n        <h1>pomodoro clock</h1>\n      </div>\n\n      <Settings\n        breakLength={breakLength}\n        sessionLength={sessionLength}\n        isStart={isStart}\n        onDecreaseBreak={this.onDecreaseBreak}\n        onDecreaseSession={this.onDecreaseSession}\n        onIncreaseBreak={this.onIncreaseBreak}\n        onIncreaseSession={this.onIncreaseSession}\n      />\n      <Time\n        timeLabel={timeLabel}\n        timeLeftInSecond={timeLeftInSecond}\n      />\n      <Controller\n        onReset={onReset}\n        onStartStop={onStartStop}\n        isStart={isStart}\n      />\n    </StyledTimeApp>\n  )\n}\n\nexport default TimeApp"]},"metadata":{},"sourceType":"module"}