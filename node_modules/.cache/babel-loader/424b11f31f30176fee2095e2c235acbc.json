{"ast":null,"code":"import _slicedToArray from \"/Users/spectrumlighting/Documents/Sites/pomodoro-clock/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/spectrumlighting/Documents/Sites/pomodoro-clock/src/components/Timer.js\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction Timer() {\n  const _useState = useState(25 * 60),\n        _useState2 = _slicedToArray(_useState, 2),\n        seconds = _useState2[0],\n        setSeconds = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        paused = _useState4[0],\n        setPaused = _useState4[1];\n\n  useEffect(() => {\n    const int = setInterval(() => {\n      console.log(\"\".concat(Date.now(), \" - paused: \").concat(paused));\n\n      if (!paused) {\n        setSeconds(s => s - 1);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(int);\n    };\n  }, [paused]);\n\n  function startTimer() {\n    setPaused(false);\n  }\n\n  function pauseTimer() {\n    setPaused(true);\n  }\n\n  function resetTimer() {\n    setPaused(true);\n    setSeconds(25 * 60);\n  }\n\n  return React.createElement(React.Fragment, null, \"\".concat(Math.floor(seconds / 60), \":\").concat((\"00\" + seconds % 60).slice(-2)), React.createElement(\"button\", {\n    onClick: paused ? startTimer : pauseTimer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, paused ? \"Start\" : \"Pause\"), React.createElement(\"button\", {\n    onClick: resetTimer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Reset\"));\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/spectrumlighting/Documents/Sites/pomodoro-clock/src/components/Timer.js"],"names":["React","useState","useEffect","Timer","seconds","setSeconds","paused","setPaused","int","setInterval","console","log","Date","now","s","clearInterval","startTimer","pauseTimer","resetTimer","Math","floor","slice"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,KAAT,GAAiB;AAAA,oBACeF,QAAQ,CAAC,KAAK,EAAN,CADvB;AAAA;AAAA,QACRG,OADQ;AAAA,QACCC,UADD;;AAAA,qBAEaJ,QAAQ,CAAC,IAAD,CAFrB;AAAA;AAAA,QAERK,MAFQ;AAAA,QAEAC,SAFA;;AAIfL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,GAAG,GAAGC,WAAW,CAAC,MAAM;AAC5BC,MAAAA,OAAO,CAACC,GAAR,WAAeC,IAAI,CAACC,GAAL,EAAf,wBAAuCP,MAAvC;;AACA,UAAI,CAACA,MAAL,EAAa;AACXD,QAAAA,UAAU,CAACS,CAAC,IAAIA,CAAC,GAAG,CAAV,CAAV;AACD;AACF,KALsB,EAKpB,IALoB,CAAvB;AAMA,WAAO,MAAM;AACXC,MAAAA,aAAa,CAACP,GAAD,CAAb;AACD,KAFD;AAGD,GAVQ,EAUN,CAACF,MAAD,CAVM,CAAT;;AAYA,WAASU,UAAT,GAAsB;AACpBT,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AACD,WAASU,UAAT,GAAsB;AACpBV,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,WAASW,UAAT,GAAsB;AACpBX,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,IAAAA,UAAU,CAAC,KAAK,EAAN,CAAV;AACD;;AAED,SACE,oDACMc,IAAI,CAACC,KAAL,CAAWhB,OAAO,GAAG,EAArB,CADN,cACkC,CAAC,OAAQA,OAAO,GAAG,EAAnB,EAAwBiB,KAAxB,CAA8B,CAAC,CAA/B,CADlC,GAEE;AAAQ,IAAA,OAAO,EAAEf,MAAM,GAAGU,UAAH,GAAgBC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,MAAM,GAAG,OAAH,GAAa,OADtB,CAFF,EAKE;AAAQ,IAAA,OAAO,EAAEY,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CADF;AASD;;AAED,eAAef,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Timer() {\n  const [seconds, setSeconds] = useState(25 * 60);\n  const [paused, setPaused] = useState(true);\n\n  useEffect(() => {\n    const int = setInterval(() => {\n      console.log(`${Date.now()} - paused: ${paused}`);\n      if (!paused) {\n        setSeconds(s => s - 1);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(int);\n    };\n  }, [paused]);\n\n  function startTimer() {\n    setPaused(false);\n  }\n  function pauseTimer() {\n    setPaused(true);\n  }\n  function resetTimer() {\n    setPaused(true);\n    setSeconds(25 * 60);\n  }\n\n  return (\n    <>\n      {`${Math.floor(seconds / 60)}:${(\"00\" + (seconds % 60)).slice(-2)}`}\n      <button onClick={paused ? startTimer : pauseTimer}>\n        {paused ? \"Start\" : \"Pause\"}\n      </button>\n      <button onClick={resetTimer}>Reset</button>\n    </>\n  );\n}\n\nexport default Timer\n"]},"metadata":{},"sourceType":"module"}